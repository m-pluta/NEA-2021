package nea;

import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

public class formLogin extends javax.swing.JFrame {

    static Connection conn = null;

    public formLogin() {
        initComponents();
        this.setLocationRelativeTo(null);                           // Positions form in the centre of the screen
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        txtPassword.setEchoChar('â€¢');

        boolean isCapsLockOn = Toolkit.getDefaultToolkit().getLockingKeyState(KeyEvent.VK_CAPS_LOCK);
        lblCapsLock.setVisible(isCapsLockOn);

        KeyListener CapsLock = new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
                boolean isCapsLockOn = Toolkit.getDefaultToolkit().getLockingKeyState(KeyEvent.VK_CAPS_LOCK);
                lblCapsLock.setVisible(isCapsLockOn);
            }

            @Override
            public void keyPressed(KeyEvent e) {
                boolean isCapsLockOn = Toolkit.getDefaultToolkit().getLockingKeyState(KeyEvent.VK_CAPS_LOCK);
                lblCapsLock.setVisible(isCapsLockOn);
            }

            @Override
            public void keyReleased(KeyEvent e) {
                boolean isCapsLockOn = Toolkit.getDefaultToolkit().getLockingKeyState(KeyEvent.VK_CAPS_LOCK);
                lblCapsLock.setVisible(isCapsLockOn);
            }

        };

        txtUsername.addKeyListener(CapsLock);
        txtPassword.addKeyListener(CapsLock);

        BufferedImage imgMainLogo = null;
        BufferedImage imgLogos = null;
        try {
            imgMainLogo = ImageIO.read(new File("Main Logo.png"));
            imgLogos = ImageIO.read(new File("Logos.png"));
        } catch (IOException e) {
            e.printStackTrace();
        }

        Image scaledMainLogo = imgMainLogo.getScaledInstance(lblMainLogo.getWidth(), lblMainLogo.getHeight(),
                Image.SCALE_SMOOTH);
        Image scaledLogos = imgLogos.getScaledInstance(lblLogos.getWidth(), lblLogos.getHeight(),
                Image.SCALE_SMOOTH);
        ImageIcon imageIcon1 = new ImageIcon(scaledMainLogo);
        ImageIcon imageIcon2 = new ImageIcon(scaledLogos);

        lblMainLogo.setIcon(imageIcon1);
        lblLogos.setIcon(imageIcon2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pContainer = new javax.swing.JPanel();
        cbPassword = new javax.swing.JCheckBox();
        lblCapsLock = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        lblMainLogo = new javax.swing.JLabel();
        lblLogos = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        pTextBackground = new javax.swing.JPanel();
        lblCompanyName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Login");

        cbPassword.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        cbPassword.setText("Show Password");
        cbPassword.setNextFocusableComponent(btnLogin);
        cbPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPasswordActionPerformed(evt);
            }
        });

        lblCapsLock.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblCapsLock.setForeground(new java.awt.Color(255, 39, 93));
        lblCapsLock.setText("Caps Lock is on");

        txtPassword.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtPassword.setNextFocusableComponent(cbPassword);

        lblPassword.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblPassword.setText("Password:");

        txtUsername.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        txtUsername.setNextFocusableComponent(txtPassword);

        lblUsername.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblUsername.setText("Username:");

        btnLogin.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.setNextFocusableComponent(txtUsername);
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        pTextBackground.setBackground(new java.awt.Color(255, 255, 255));

        lblCompanyName.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblCompanyName.setForeground(new java.awt.Color(39, 245, 103));
        lblCompanyName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCompanyName.setText("ROBIP-PGHEM-ENGINEERING");
        lblCompanyName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pTextBackgroundLayout = new javax.swing.GroupLayout(pTextBackground);
        pTextBackground.setLayout(pTextBackgroundLayout);
        pTextBackgroundLayout.setHorizontalGroup(
            pTextBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCompanyName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pTextBackgroundLayout.setVerticalGroup(
            pTextBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pTextBackgroundLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(lblCompanyName))
        );

        javax.swing.GroupLayout pContainerLayout = new javax.swing.GroupLayout(pContainer);
        pContainer.setLayout(pContainerLayout);
        pContainerLayout.setHorizontalGroup(
            pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pContainerLayout.createSequentialGroup()
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pContainerLayout.createSequentialGroup()
                        .addComponent(lblCapsLock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbPassword))
                    .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pContainerLayout.createSequentialGroup()
                            .addComponent(lblMainLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lblLogos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(pContainerLayout.createSequentialGroup()
                            .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblPassword)
                                .addComponent(lblUsername))
                            .addGap(14, 14, 14)
                            .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsername)
                                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pContainerLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
            .addGroup(pContainerLayout.createSequentialGroup()
                .addComponent(pTextBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pContainerLayout.setVerticalGroup(
            pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pContainerLayout.createSequentialGroup()
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMainLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLogos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(pTextBackground, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(pContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbPassword)
                    .addComponent(lblCapsLock))
                .addGap(18, 18, 18)
                .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(pContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(pContainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Fetches password from the password field and returns the string equivalent since the JPasswordField.getPassword() returns a char array and not a string
    private String getPassword() {
        String inputPassword = "";
        char[] passwordArray = txtPassword.getPassword();
        for (char chr : passwordArray) {                            // Loops through each element in char array
            inputPassword += chr;                                   // Concatenates char to string
        }
        return inputPassword;

    }


    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        String inputUsername = txtUsername.getText();
        String inputPassword = getPassword();                       // User Input into variables

        Boolean found = false;                                      // Whether a user exists under the given login details
        int fetchedID = -1;                                         // Init

        conn = sqlManager.openConnection();
        String query = "SELECT employee_id, username, password FROM tblLogins WHERE username = ? AND password = ?";
        try {
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, inputUsername);
            pstmt.setString(2, inputPassword);

            ResultSet rs = pstmt.executeQuery();
            if (rs.next()) {                                        // If any results were fetched from the DB
                if (inputUsername.equals(rs.getString(2)) && inputPassword.equals(rs.getString(3))) {   // Secondary check which ensures the username and password are of the same case (capitalisation)

                    fetchedID = rs.getInt(1);      // Gets the id of whoever logged in
                    found = true;
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        if (!found) {                                               // If a user was not found
            ErrorMsg.throwError(ErrorMsg.INVALID_LOGIN_DETAILS_ERROR);
        } else {                                                    // If a user was found with those login details
            sqlManager.updateLastLogin(conn, fetchedID);

            formMainMenu MainMenu = new formMainMenu().getFrame();  // Creates a new instance of the main menu form
            MainMenu.loggedIn_UserID = fetchedID;                   // The employee_id of whoever is logged in
            MainMenu.whoLoggedIn();                                 // Updates label in Main Menu form to show who logged in
            MainMenu.checkWhetherAdmin();                           // If the user is an admin then they will have permission to all the management features
            MainMenu.setVisible(true);                              // Makes the main menu visible
            this.dispose();                                         // Closes login form and disposes instance from system memory pool
        }
        sqlManager.closeConnection(conn);
    }//GEN-LAST:event_btnLoginActionPerformed

    private void cbPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPasswordActionPerformed
        if (cbPassword.isSelected()) {
            txtPassword.setEchoChar((char) 0);                      // If the user wants to see their password
        } else {
            txtPassword.setEchoChar('â€¢');
        }
    }//GEN-LAST:event_cbPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JCheckBox cbPassword;
    private javax.swing.JLabel lblCapsLock;
    private javax.swing.JLabel lblCompanyName;
    private javax.swing.JLabel lblLogos;
    private javax.swing.JLabel lblMainLogo;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pContainer;
    private javax.swing.JPanel pTextBackground;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
